# jq(1) completion                                         -*- shell-script -*-

_jq()
{
    local cur prev words cword
    _init_completion || return

    case $prev in
        --help | --version | --arg | --argjson | --slurpfile | --argfile)
            return
            ;;
        --indent)
            COMPREPLY=($(compgen -W '{1..8}' -- "$cur"))
            return
            ;;
        --from-file | --run-tests | -!(-*)f)
            _filedir
            return
            ;;
        -!(-*)L)
            _filedir -d
            return
            ;;
    esac

    ((cword > 2)) &&
        case ${words[cword - 2]} in
            --arg | --argjson)
                return
                ;;
            --slurpfile | --argfile)
                _filedir json
                return
                ;;
        esac

    # jq's --help only shows some of its command-line options; some are not
    # even listed in the man page!
    if [[ $cur == -* ]]; then
        COMPREPLY=($(compgen -W '--version --seq --stream --slurp --raw-input
            --null-input --compact-input --tab --indent --color-output
            --monochrome-output --ascii-output --unbuffered --sort-keys
            --raw-output --join-output --from-file --exit-status
            --arg --argjson --slurpfile --rawfile --argfile --args --jsonargs
            --run-tests --help --version' -- "$cur"))
        return
    fi

    local args
    # TODO: DTRT with args taking 2 options
    # -f|--from-file are not counted here because they supply the filter
    _count_args "" "@(--arg|--arg?(json|file)|--slurpfile|--indent|--run-tests|-!(-*)L)"

    # 1st arg is filter
    ((args == 1)) && return
    # 2... are input files
    _filedir json

} &&
    complete -F _jq jq

# ex: filetype=sh
